1. session 和 cookie 有什么区别？
    --  Session是在服务端保存的一个数据结构，用来跟踪用户的状态，这个数据可以保存在集群、数据库、文件中；
        Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，也是实现Session的一种方式。

2. 说一下 session 的工作原理？
    -- session是一个存在服务器上的类似于一个散列表格的文件。里面存有我们需要的信息，在我们需要用的时候可以从里面取出来。
    类似于一个大号的map吧，里面的键存储的是用户的sessionid，用户向服务器发送请求的时候会带上这个sessionid。这时就可以从中取出对应的值了。

3. 客户端禁止 cookie 能实现 session 还能用吗
    -- 不能，因为Session是用Session ID来确定当前对话所对应的服务器Session，而Session ID是通过Cookie来传递的，
    禁用Cookie相当于失去了Session ID，也就得不到Session了。

1. 301和401的区别？
    -- 都为http的状态码，都代表着url发生转移
        301为永久性转移
        401为暂时性转移

2. 三次握手和四次握手？
    -- 两次握手并不能确保服务端的发送是否存在正常以及客户端的接受是否正常
       解析
            客户端 -- 服务端 第一次握手，服务端收到消息，证明客户端的发送和服务端的接受正常
            服务端 -- 客户端 第二次握手，客户端收到消息，证明客户端的接受和服务端的发送正常，但服务端并不知道客户端的接受能力是否正常
            客户端 -- 服务端 第三次握手，服务端收到消息，证明客户端的接受正常

3. 代理模式？
    -- 单例模式
        适配者模式
        工厂模式
        代理模式
        装饰者模式

4. 简单工厂和抽象工厂有什么区别？
    -- 简单工厂由三种角色组成
        工厂类角色：这是本模式的核心，含有一定的商业逻辑和判断逻辑，根据逻辑不同，产生具体的工厂产品。如例子中的Driver类。

        抽象产品角色：它一般是具体产品继承的父类或者实现的接口。由接口或者抽象类来实现。如例中的Car接口。

        具体产品角色：工厂类所创建的对象就是此角色的实例。在java中由一个具体类实现，如例子中的Benz、Bmw类。

       抽象工厂的各个角色
        抽象工厂角色： 这是工厂方法模式的核心，它与应用程序无关。是具体工厂角色必须实现的接口或者必须继承的父类。在java中它由抽象类或者接口来实现。

        具体工厂角色：它含有和具体业务逻辑有关的代码。由应用程序调用以创建对应的具体产品的对象。在java中它由具体的类来实现。

        抽象产品角色：它是具体产品继承的父类或者是实现的接口。在java中一般有抽象类或者接口来实现。

        具体产品角色：具体工厂角色所创建的对象就是此角色的实例。在java中由具体的类来实现


   补充
1. get和post区别？
    -- get参数通过url传递，参数会在url上直接呈现，且参数长度有限，更不安全，
        而post则是在request body中携带参数

       get退回不需重新请求，post则会再次提交请求

