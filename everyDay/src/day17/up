
1. 说一下 jvm 的主要组成部分？及其作用？
    -- 类加载器（ClassLoader）

       运行时数据区（Runtime Data Area）

       执行引擎（Execution Engine）

       本地库接口（Native Interface）

       组件的作用： 首先通过类加载器（ClassLoader）会把 Java 代码转换成字节码，

        运行时数据区（Runtime Data Area）再把字节码加载到内存中，而字节码文件只是 JVM 的一套指令集规范，并不能直接交个底层操作系统去执行，

        因此需要特定的命令解析器执行引擎（Execution Engine），将字节码翻译成底层系统指令，再交由 CPU 去执行，

        而这个过程中需要调用其他语言的本地库接口（Native Interface）来实现整个程序的功能。

2. 说一下 jvm 运行时数据区？
    -- 程序计数器

       虚拟机栈

       本地方法栈

       堆 (所有线程共享)

       方法区 (所有线程共享)

3. 堆栈的区别？
    -- 1. 栈内存存储的是局部变量，而堆内存存储的是实体

       2. 栈内存的更新速度要快于堆内存，因为局部变量的生命周期很短

       3. 栈内存存放的变量生命周期一旦结束就会被释放，而堆内存存放的实体会被垃圾回收机制不定时的回收。

4. 队列和栈是什么？有什么区别？
    -- 队列和栈都是被用来预存储数据的。

       队列允许先进先出检索元素，但也有例外的情况，Deque 接口允许从两端检索元素。

       栈和队列很相似，但它运行对元素进行后进先出进行检索。